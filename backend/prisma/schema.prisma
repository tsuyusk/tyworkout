generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String
  password  String
  image     String   @default("https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  workoutPlans WorkoutPlan[]
}

model WorkoutPlan {
  id             String    @id @default(uuid())
  occourenceDays String
  workouts        Workout[]
  title         String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String

  exercisePlans ExercisePlan[]
}

//  TO DO: desativar ao inves de deletar, pra salvar o historico
model ExercisePlan {
  id String @id @default(uuid())

  title String

  done Boolean @default(false)

  goalReps Int
  doneReps Int @default(0)

  goalSets Int
  doneSets Int @default(0)

  userId String

  workoutPlan WorkoutPlan @relation(fields: [workoutPlanId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  workoutPlanId String
}


model Workout {
  id            String      @id @default(uuid())
  done          Boolean @default(false)
  expiresIn     DateTime
  workoutPlanId String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @default(now()) @updatedAt
  userId String
  workoutPlan   WorkoutPlan @relation(fields: [workoutPlanId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  exercises Exercise[]
}

model Exercise {
  id String @id @default(uuid())

  title String

  done Boolean @default(false)

  goalReps Int
  doneReps Int @default(0)

  goalSets Int
  doneSets Int @default(0)

  workout Workout @relation(fields: [workoutId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  workoutId String

  userId String
}
